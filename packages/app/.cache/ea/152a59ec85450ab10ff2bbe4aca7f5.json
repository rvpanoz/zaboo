{"id":"node_modules/rxjs/_esm5/internal/observable/empty.js","dependencies":[{"name":"/home/rvpanoz/projects/zaboo/packages/app/node_modules/rxjs/_esm5/internal/observable/empty.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rvpanoz/projects/zaboo/packages/app/node_modules/rxjs/src/internal/observable/empty.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rvpanoz/projects/zaboo/packages/app/package.json","includedInParent":true,"mtime":1578607619525},{"name":"/home/rvpanoz/projects/zaboo/packages/app/node_modules/rxjs/package.json","includedInParent":true,"mtime":1578608344282},{"name":"../Observable","loc":{"line":2,"column":27},"parent":"/home/rvpanoz/projects/zaboo/packages/app/node_modules/rxjs/_esm5/internal/observable/empty.js","resolved":"/home/rvpanoz/projects/zaboo/packages/app/node_modules/rxjs/_esm5/internal/Observable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.empty = empty;\nexports.EMPTY = void 0;\n\nvar _Observable = require(\"../Observable\");\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nvar EMPTY =\n/*@__PURE__*/\nnew _Observable.Observable(function (subscriber) {\n  return subscriber.complete();\n});\nexports.EMPTY = EMPTY;\n\nfunction empty(scheduler) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler) {\n  return new _Observable.Observable(function (subscriber) {\n    return scheduler.schedule(function () {\n      return subscriber.complete();\n    });\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":12,"column":4}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":4}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":26}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":27}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":37}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":47}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":14,"column":49}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":19}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":20}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":28}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":15,"column":30}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":47},"generated":{"line":16,"column":1}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":62,"column":6},"generated":{"line":16,"column":2}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":19,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":19,"column":14}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":19,"column":15}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":19,"column":24}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":63,"column":21},"generated":{"line":19,"column":26}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":18}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":21}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":35}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":36}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":45}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":46}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":49}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":64,"column":1},"generated":{"line":20,"column":54}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":23,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":67,"column":13},"generated":{"line":23,"column":24}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":67,"column":31},"generated":{"line":23,"column":35}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":9}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":13}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":35}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":36}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":46}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":56}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":24,"column":58}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":11}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":20}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":21}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":29}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":30}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":25,"column":42}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":13}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":23}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":24}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":32}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":26,"column":34}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":27,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":27,"column":5}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":27,"column":6}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":28,"column":0}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":28,"column":3}},{"source":"../../../src/internal/observable/empty.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":28,"column":4}}],"sources":{"../../../src/internal/observable/empty.ts":"import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n"},"lineCount":null}},"error":null,"hash":"1eebc51fb7016d63558d1495a80ea35d","cacheData":{"env":{}}}